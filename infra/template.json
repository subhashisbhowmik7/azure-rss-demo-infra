{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflows_rss_feed_polling_name": {
      "type": "string",
      "defaultValue": "rss-feed-polling"
    },
    "location": {
      "type": "string",
      "defaultValue": "southindia"
    },
    "rssFeedUrl": {
      "type": "string",
      "defaultValue": "https://timesofindia.indiatimes.com/rssfeedstopstories.cms",
      "metadata": {
        "description": "RSS feed URL to monitor"
      }
    },
    "functionAppUri": {
      "type": "string",
      "metadata": {
        "description": "Base URL of the Azure Function App"
      }
    },
    "functionAppKey": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Function Key"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_rss_feed_polling_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "rssFeedUrl": {
              "type": "String"
            }
          },
          "triggers": {
            "Whenever_a_Feed_Item_is_Published": {
              "recurrence": {
                "interval": 30,
                "frequency": "Minute",
                "timeZone": "India Standard Time"
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['rss']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/OnNewFeed",
                "queries": {
                  "feedUrl":  "@parameters('rssFeedUrl')"
                }
              }
            }
          },
          "actions": {
            "Input_Title_Link": {
              "runAfter": {
                "Initialize_lastItemId": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": {
                "title": "@{triggerOutputs()?['body/title']}",
                "id": "@{triggerBody()?['id']}",
                "feedPublished": "@{triggerOutputs()?['body/publishDate']}",
                "feedSummary": "@{triggerBody()?['summary']}"
              }
            },
            "Condition": {
              "actions": {
                "Set_lastItemId": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "lastItemId",
                    "value": "@triggerBody()?['id']"
                  }
                },
                "Function_App": {
                  "runAfter": {
                    "Set_lastItemId": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "uri": "[concat(parameters('functionAppUri'), '/api/HttpTriggerJava1?code=', parameters('functionAppKey'))]",
                    "method": "POST",
                    "headers": {
                      "Content-Type": "application/json"
                    },
                    "body": {
                      "title": "@{triggerBody()?['title']}",
                      "id": "@{triggerBody()?['id']}",
                      "feedSummary": "@{triggerBody()?['summary']}",
                      "feedPublished": "@{triggerBody()?['publishDate']}"
                    }
                  }
                }
              },
              "runAfter": {
                "Input_Title_Link": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@triggerBody()?['id']",
                        "@variables('lastItemId')"
                      ]
                    }
                  }
                ]
              },
              "type": "If"
            },
            "Initialize_lastItemId": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "lastItemId",
                    "type": "string",
                    "value": ""
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "rss": {
                "id": "[resourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'rss')]",
                "connectionId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/rss')]",
                "connectionName": "rss"
              }
            }
          },
          "rssFeedUrl": {
            "value": "[parameters('rssFeedUrl')]"
          }
        }
      }
    }
  ]
}
